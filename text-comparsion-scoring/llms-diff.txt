Test 1:
etalon.md:
AC DC - Highway to hell

user.md:
Ain't no rest for the wicked

anki-mistral.json:
{"mark": 2, "comment": "Whilst both songs are by AC/DC and share a dark theme, 'Ain't No Rest for the Wicked' is not the title of 'Highway to Hell'. They do not share the same title, but the artist connection indicates some level of relatedness."}

anki-deepseek.json:
{ "mark": 5, "comment": "Верный ответ с точным переводом. Структура и смысл совпадают." }
  	      				 						

anki-llama-3.1.json:
{
  "mark": 1,
  "comment": "Полностью неправильный трек и группа. Правильная группа - AC/DC, а трек назывался 'Highway to Hell'. Ответ пользователя относится к другой песне группы Avenged Sevenfold."
}

anki-llama-3.2.json:
{"mark": 4, "comment": "Ответ точно содержит название Albums и песни, но с ошибкой названия и нумерации трека."}

==========
==========
Test 2:
etalon.md:
Эстония, Латвия, Литва

user.md:
Латвия, США, Россия, Китай

anki-mistral.json:
{"mark": 1, "comment": "Пользователь указал страны не из списка - Латвия есть, а США, Россия и Китай не являются соседями Эстонии и Литвы."}

anki-deepseek.json:
{ "mark": 1, "comment": "Вероятно, вы неправильно поняли страны из списка. В задании указаны только три страны: Эстония, Латвия, Литва, но пользователь упомянул США, Россия и Китай, что大大 отличается от mongolian"}
  		                

anki-llama-3.1.json:
{
  "mark": 1,
  "comment": "Не все страны указаны верно. Ошибка в двух странах."
}

anki-llama-3.2.json:
{"mark": 2, "comment": "Оценка снизу вверх из-за добавления неверных стран, но не совсем нет точек совпадения."}

==========
==========
Test 3:
etalon.md:
реализовывать наследование надо так, чтобы в случае подстановки подкласса на место суперкласс (upcast) **контракты не нарушались**

---

Более академично:
- Функции, использующие **базовый** тип, должны иметь возможность использовать его подтипы, не зная об этом (то есть чтобы для них работал upcast приведение типа)
- Наследующий класс должен дополнять, а не замещать поведение базового класса

user.md:
Подклассы - это как суперклассы

anki-mistral.json:
{"mark": 2, "comment": "Пользователь указал, что подклассы — это как суперклассы, однако не упомянул о том, чтобы контракты не нарушались при использовании подкласса вместо суперкласса (upcast). Это ограничивает сходство ответа пользователя со стандартной практикой."}

anki-deepseek.json:
{ "mark": 1, "comment": "Ваш ответ не совсем верен. В контексте наследования подклассы действительно не подtiпы сuperclases, это противоположное. Понял, что вы пытаетесь сказать о том, чтобы подтипы могли использоваться вместо базового типа с сохранением функционала, но ваш措辞 неправильный."
}
		 					 				 				 	

anki-llama-3.1.json:
{
  "mark": 1,
  "comment": "Отвечает на проблему наследования, но содержит противоположное содержание"
}

anki-llama-3.2.json:
{
  "mark": 1,
  "comment": "Неправильная интерпретацияConcept of inheritance. Суперклассы и подклассы обозначают обратные отношения. Подклассы должны наследовать свойства и поведение от супERCлассов, а не наоборот."}

==========
==========
Test 4:
etalon.md:
реализовывать наследование надо так, чтобы в случае подстановки подкласса на место суперкласс (upcast) **контракты не нарушались**

---

Более академично:
- Функции, использующие **базовый** тип, должны иметь возможность использовать его подтипы, не зная об этом (то есть чтобы для них работал upcast приведение типа)
- Наследующий класс должен дополнять, а не замещать поведение базового класса

user.md:


anki-mistral.json:
{"mark": 4, "comment": "Верно в сути, но мой ответ может быть более формализован, чтобы соответствовать академическому стилю. Попытка объяснить поведение upcast приведения типов и указание на то, что подкласс должен дополнять поведение суперкласса, а не замещать его."}

anki-deepseek.json:
{ "mark": 4, "comment": "Вот ваш академический ответ:\n\nДля реализации наследия нужно следовать такому подходу:\n1. Функции, которые используют базовый тип, должны поддерживать использование его подтипов.\n2. Наследующий класс должен дополнивать поведение базового класса, а не замещать"} 

anki-llama-3.1.json:
{
  "mark": 5,
  "comment": "Очень близко к оригинальному ответу, описанию концепции наследования в ООП"
}

anki-llama-3.2.json:
{
  "mark": 4,
  "comment": "Отвечает о важности сохранения контрактов при upcast. Однако может быть воспринято как неполное описание继uvания в терминах функций"
}

==========
==========
Test 5:
etalon.md:
Индия

user.md:
Пакистан

anki-mistral.json:
{
      "mark": 1,
      "comment": "Индия и Пакистан различаются странами, поэтому полная ошибка."
   }

anki-deepseek.json:
{ "mark": 4, "comment": "Неверный ответ, но схожий.\"Индия\" и \"Пakistan\" похожи, но не一回事." }

anki-llama-3.1.json:
{
  "mark": 1,
  "comment": "Ответ совершенно не соответствует правильному. Это значительный разбой по смыслу."
}

anki-llama-3.2.json:
{"mark": 0, "comment": "Окончательный ответ совсем не связан с упомянутой в вопросе страной."}

==========
==========
Test 6:
etalon.md:
Контракт включает в себя:
- набор операций
- параметры операций и нго допустимые значения, интерпретация параметров
- допустимые возвращаемые значения и их интерпретация
- сообщения об ошибках
- предусловия
- постусловия
- инварианты
- побочные эффекты

user.md:
Контракт - договор с каким-то физическим или юридическим лицом

anki-mistral.json:
{"mark": 1, "comment": "The user's response does not address the question about what a contract in the context of programming includes. The user's answer is about a contract in general terms, not specifically about a programming contract."}

anki-deepseek.json:
{ "mark": 2, "comment": "Ваш ответ содержит основные элементы контракта, но Missing绝大部分 detail. The user provided a simplified version of the contract." }


anki-llama-3.1.json:
{
  "mark": 1,
  "comment": "Ответ пользователя явно неверен. В контракте нет NOTHING о договоре со структурными элементами, а скорее это набор правил и ограничений для программного обеспечения."
}

anki-llama-3.2.json:
{"mark": 2, "comment": "Ответ пользователя очень близок к правдоподобному ответу, но lacks важной информации о контексте и конкретных операциях. Правильный ответ больше фокусируется на technical aspects контракта, а не его юридическом или физическом смысле."}

==========
==========
Test 7:
etalon.md:
Тело сохраняет состояние покоя или равномерного движения, пока на него не подействует внешняя сила.


user.md:
Тело всегда движется с ускорением, если на него не действует сила.

anki-mistral.json:
{
      "mark": 3,
      "comment": "В ответе пользователя содержится ошибка в понимании терминов: тело всегда сохраняет состояние покоя или равномерного движения, если не действуют внешние силы на него, а не обязательно движется с ускорением."
   }

anki-deepseek.json:
{ "mark": 1, "comment": "Ты неправильно понял закон сохранения импульса. В实际情况 bodies only maintain constant velocity if no external forces are acting. Your answer implies that bodies accelerate constantly without force, which contradicts Newton's first law." }
						    

anki-llama-3.1.json:
{
  "mark": 1,
  "comment": "Ответ полностью противоположен эталонному. Неправильно описано закономерное движение и присутствует ошибка в понимании концепции силы."
}

anki-llama-3.2.json:
{
  "mark": 1,
  "comment": "Ответpletely неверен. График движения тела depends от силы, а не ускорения. Если нет внешней силы, тело будет хранить свое текущее состояние движения, но если присутствуют сопротивление и/или сила, то оно изменится." }

==========
==========
Test 8:
etalon.md:
```python
if условие:
    действие
```

user.md:
Python использует switch для условий.

anki-mistral.json:
{"mark": 1, "comment": "Пользователь спутал язык программирования и конструкцию решения условия в Python."}

anki-deepseek.json:
{ "mark": 3, "comment": "Верно, но отсутствуют ключевые элементы структуры кода, такие как 'if' и 'condition'. В примере отсутствует braces."
}
		 				 				 				 		

anki-llama-3.1.json:
{
  "mark": 1,
  "comment": "Неправильное утверждение о синтаксе Python. В языке нет команды switch."
}

anki-llama-3.2.json:
{
  "mark": 1,
  "comment": "Ответ пользователя не соответствует эталонному ответу, поскольку в.etalonnye.pythn-код не содержит условия, а instead uses switch-case, который является другим и более новым синтаксисом" }

==========
==========
Test 9:
etalon.md:
Она началась в 1939 году, когда Германия напала на Польшу.

user.md:
Вторая мировая началась в 1941 году

anki-mistral.json:
{
      "mark": 2,
      "comment": "Вторую мировую войну начали в 1939 году, неправильно указано начало в 1941 году."
   }

anki-deepseek.json:
{ "mark": 2, "comment": "Вторая мировая война началась в 1941 году, но пользователь указал 1939 год, что не совсем верно." }
				            				

anki-llama-3.1.json:
{
  "mark": 2,
  "comment": "Неправильная дата начала Второй мировой войны. Ошибка составляет несколько лет."
}

anki-llama-3.2.json:
{"mark": 2, "comment": "Верно, что Вторая мировая война началась после того, как Германия напала на Польшу, но начало войны было в 1939 году, а не в 1941 году."}

==========
==========
Test 10:
etalon.md:
1. Красный  
2. Синий  
3. Жёлтый

user.md:
Основные цвета: зелёный, фиолетовый и оранжевый

anki-mistral.json:
{
    "mark": 2,
    "comment": "Пользователь указал основные цвета, но в ответе нет ни красного, ни синего, ни жёлтого. Указан зелёный, фиолетовый и оранжевый."
   }

anki-deepseek.json:
{ "mark": 4, "comment": "Верный ответ содержит основные цвета (красный, синий, жёлтый), а пользователь упомянул зелёный, фиолетовый и оранжевой. Это closely related information, но не完全是 то же самое." }
				             	 	

anki-llama-3.1.json:
{
"mark": 1,
"comment": "В ответе нет ни одного из основных цветов из эталонного ответа, вместо этого приведены не связанные с вопросом цвета."
}

anki-llama-3.2.json:
{"mark": 1, "comment": "Нет основного красного цвета в ответе пользователя."}

==========
==========
Test 11:
etalon.md:
> Свобода — это осознанная необходимость

*— Бенедикт Спиноза*

user.md:
Свобода — это делать всё, что захочешь

anki-mistral.json:
{"mark": 3, "comment": "Whilst the sentiment is correct, the user's response lacks the philosophical depth and specificity found in Spinoza's quote."}

anki-deepseek.json:
{ "mark": 1, "comment": "Оценка 1: Ошибка в сущности ответа. В примере用户 утверждает, что свобода — это去做 все, что захочешь, что противоречит пониманию свободы как осознанному требованию, а не произволу." }


anki-llama-3.1.json:
{
  "mark": 1,
  "comment": "Неправильное толкование цитаты и противоположный смысл"
}

anki-llama-3.2.json:
{
  "mark": 2,
  "comment": "Ответ неверен в том смысле, что он не отражает точную идею о свободе в философии Бенедикта Спинозы. Правильный ответ должен включать концепцию осознанной необходимости."}

==========
==========
Test 12:
etalon.md:
1. Закипятите воду.  
2. Добавьте соль и макароны.  
3. Варите 8-10 минут, помешивая.  
4. Слейте воду и подавайте.

user.md:
Сначала кидаешь макароны в кастрюлю, потом заливаешь водой и варишь

anki-mistral.json:
{"mark": 4, "comment": "Ответы схожи по структуре и действиям, но пользователь первым делом упомянул добавление макаронов в кастрюлю, после чего заливает водой. В эталонном ответе это действия были поменяны местами."}

anki-deepseek.json:
{ "mark": 3, "comment": "Вsdkjkllkjhjk " }
						   						   		

anki-llama-3.1.json:
{
  "mark": 1,
  "comment": "Ответ содержит фундаментальные ошибки готовки макарон. Неверный порядок действий, отсутствует добавление соли."
}

anki-llama-3.2.json:
{
    "mark": 2,
    "comment": "Ответ userа partially верен, но не совсем точно. В правильном эталонном ответе первым делом добавляется соль, а затем макароны."
}

==========
==========
Test 13:
etalon.md:
1. Оператор if 
2. Оператор if - else 
3. if - else if - else 
4. Оператор switch 
5. Условный оператор switch без выражения 
Примеры:
```go
if условие {
    // код, выполняемый если условие истинно
} else {
    // код, выполняемый если условие ложно
}

switch переменная {
case значение:
    // код, выполняемый если переменная равна значение
default:
    // код, выполняемый если ни одно из значений не совпадает
}
```

user.md:
В Go есть `for` и `while`, а также условные функции

anki-mistral.json:
{"mark": 2, "comment": "Пользователь правильно отметил наличие оператора if, но неверно описал структуру if-else и не упомянул switch - оператор контроля переменной"}

anki-deepseek.json:
{ "mark": 1, "comment": "Ваш ответ не содержит информации о операторе if или switch в Go. Для получения правильного ответа нужно учесть, что в Go нет switch-оператора, только if с else и without."
}
   																	

anki-llama-3.1.json:
{
  "mark": 1,
  "comment": "Неправильно указаны операторы, отсутствуют switch и else if. Больше всего опечатки в том, что говорится о while."
}

anki-llama-3.2.json:
{"mark": 1, "comment": "Ответ пользователя предоставил неполный и неверный ответ. В Go есть `if` и `switch`, но он упомянул только `for` и `while`, не mentioning `switch` как основного условия."}

==========
==========
